{
  "name": "T_REX_DB_POSTGRES",
  "description": "You are a PostGresSQL query generator. \n\nUse this tool if user asks a question related to Neon or Neon Data or Neon Datawarehouse or even if just refers to Datawarehouse \n\nExecute API call to a based on user question . User question would be converted into a PostgreSQL Query and passed as a parameter. Another parameter is the cloud database provider. Currently it is only 'neon' for all. See sample API endpoint URL call below.\n\nDatabase is PostGreSQL So make sure that queries are PostGreSQL compliant\n\nALWAYS use this schema: schema_rextemp when using this tool. The schemas for other tools are would be different.\n\nPlease wait for upto 180  seconds for query response to come in as the server can be slow sometimes\n\nPlease only share results  from ACTUAL query run and not to share any made up numbers.",
  "color": "linear-gradient(rgb(51,132,43), rgb(43,166,67))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"sqlquery\",\"description\":\"PostGres SQL query string based on user question\",\"type\":\"string\",\"required\":true},{\"id\":1,\"property\":\"cloudVar\",\"description\":\"this would always be 'neon'\",\"type\":\"string\",\"required\":false}]",
  "func": "/*\nNOTE FOR TOOL AGENT : Please wait for upto 180  seconds for query response to come in as the server can be slow sometimes\n*/\n\nconst fetch = require('node-fetch');\n\n// Properly encode the query parameters\nconst sqlQuery = encodeURIComponent($sqlquery);\nconst cloudVar = encodeURIComponent($cloudVar);\n\n\nconst url = `https://your-fastapi-server-endpoint.com/sqlquery/?sqlquery=${sqlQuery}&cloud=${cloudVar}`;\n\n\n\nconst options = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\n\ntry {\n    const response = await fetch(url, options);\n    const text = await response.text();\n    return text;\n} catch (error) {\n    console.error(error);\n    return '';\n}\n"
}